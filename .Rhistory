library("testthat")
?test_that
test_that("dummy", {)
pol(2,1:6)
class(pol(2,1:6))
expect1 <- matrix(c(1,2,4,0,3,5,0,0,6),nrow=3,ncol=3)
expect1
colnames(expect1) <- c("x_0","x_1","x_2")
expect1
expect1 <- matrix(c(1,2,4,0,3,5,0,0,6),nrow=3,ncol=3)
colnames(expect1) <- c("x_0","x_1","x_2")
rownames(expect1) <- c("x_0","x_1","x_2")
expect1
pol(2,1:5)
pol(3,0)
expect2 <- matrix(c(1,2,4,0,3,5,0,0,NA),nrow=3,ncol=3)
expect2
pol(2,1:4)
test_that("Test that polynomials are generated correctly", {
pol1 <- pol(2,1:6)
expect1 <- matrix(c(1,2,4,0,3,5,0,0,6),nrow=3,ncol=3)
colnames(expect1) <- c("x_0","x_1","x_2")
rownames(expect1) <- c("x_0","x_1","x_2")
pol2 <- pol(2,1:4)
expect2 <- matrix(c(1,2,4,0,3,NA,0,0,NA),nrow=3,ncol=3)
colnames(expect2) <- c("x_0","x_1","x_2")
rownames(expect2) <- c("x_0","x_1","x_2")
expect_that(pol1, equals(expect1))
expect_that(pol2, equals(expect2))
})
test_file(path)
test_file(test)
test_file("test")
test_file("~/test")
test_dir("test/")
second.2 <- final2(times=100)
second.2
save(second.2, file="second.2.RData")
second.3 <- final2(times=100)
second.3
save(second.3, file="second.3.RData")
load("~/Hillclimbing/data/second.1.RData")
View(second.1)
load("~/Hillclimbing/data/first.1.RData")
load("~/Hillclimbing/data/first.2.RData")
View(first.1)
View(first.2)
library("Hillclimbing")
load("evaluate_polynomial.R")
load("create_polynomial.R")
pol1 <- pol(2,1:6)
val1 <- c(1,2)
pol2 <- pol(3,c(1,2,1,2,1,2,1,2,1,2))
val2 <- c(4,2,3)
calc1 <- eval.pol(pol1, val1)
calc2 <- eval.pol(pol2, val2)
stopifnot(
isTRUE(calc1 == 48)
)
stopifnot(
isTRUE(calc2 == 96)
)
})
library("Hillclimbing")
load("evaluate_polynomial.R")
load("create_polynomial.R")
pol1 <- pol(2,1:6)
val1 <- c(1,2)
pol2 <- pol(3,c(1,2,1,2,1,2,1,2,1,2))
val2 <- c(4,2,3)
calc1 <- eval.pol(pol1, val1)
calc2 <- eval.pol(pol2, val2)
stopifnot(
isTRUE(calc1 == 48)
)
stopifnot(
isTRUE(calc2 == 96)
)
set.seed(1)
random.input(5,15)
set.seed(1)
random.input(5,15)
set.seed(1)
val1 <- random.input(5,15)
set.seed(5)
val2 <- random.input(3,10)
val1
val2
pol1 <- matrix(c(1,2,4,0,3,5,0,0,6),nrow=3,ncol=3)
colnames(expect1) <- c("x_0","x_1","x_2")
rownames(expect1) <- c("x_0","x_1","x_2")
val1 <- c(3,2)
connection1 <- 1
neighbor1 <- step.choice(pol1, val1, connection1)
pol1 <- matrix(c(1,2,4,0,3,5,0,0,6),nrow=3,ncol=3)
colnames(expect1) <- c("x_0","x_1","x_2")
rownames(expect1) <- c("x_0","x_1","x_2")
pol1 <- matrix(c(1,2,4,0,3,5,0,0,6),nrow=3,ncol=3)
colnames(pol1) <- c("x_0","x_1","x_2")
rownames(pol11) <- c("x_0","x_1","x_2")
val1 <- c(3,2)
connection1 <- 1
neighbor1 <- step.choice(pol1, val1, connection1)
neighbor1
class(neighbor1)
pol2 <- matrix(c(1,3,2,4,0,5,3,4,0,0,7,1,0,0,0,5),nrow=4,ncol=4)
colnames(pol2) <- c("x_0","x_1","x_2","x_3")
rownames(pol2) <- c("x_0","x_1","x_2","x_3")
val2 <- c(3,0,4)
connection <- 2
neighbour2 <- step.choice(pol2, val2, connection2)
pol2 <- matrix(c(1,3,2,4,0,5,3,4,0,0,7,1,0,0,0,5),nrow=4,ncol=4)
colnames(pol2) <- c("x_0","x_1","x_2","x_3")
rownames(pol2) <- c("x_0","x_1","x_2","x_3")
val2 <- c(3,0,4)
connection2 <- 2
neighbour2 <- step.choice(pol2, val2, connection2)
pol2 <- matrix(c(1,3,2,4,0,5,3,4,0,0,7,1,0,0,0,5),nrow=4,ncol=4)
colnames(pol2) <- c("x_0","x_1","x_2","x_3")
rownames(pol2) <- c("x_0","x_1","x_2","x_3")
val2 <- c(3,0,4)
connection2 <- 2
neighbor2 <- step.choice(pol2, val2, connection2)
neighbor2
expect1 <- as.data.frame(matrix(c(113,87,1,2,2,1),ncol=3,nrow=2))
colnames(expect1) <- c("result","from","to")
expect1
stopifnot(
isTRUE(all.equal(neighbor1,expect1))
)
isTRUE(all.equal(neighbor1,expect1))
all.equal(neighbor2,expect2)
library("Hillclimbing")
load("what.is.a.step.forward.R")
pol1 <- matrix(c(1,2,4,0,3,5,0,0,6),nrow=3,ncol=3)
colnames(pol1) <- c("x_0","x_1","x_2")
rownames(pol11) <- c("x_0","x_1","x_2")
val1 <- c(3,2)
connection1 <- 1
neighbor1 <- step.choice(pol1, val1, connection1)
pol2 <- matrix(c(1,3,2,4,0,5,3,4,0,0,7,1,0,0,0,5),nrow=4,ncol=4)
colnames(pol2) <- c("x_0","x_1","x_2","x_3")
rownames(pol2) <- c("x_0","x_1","x_2","x_3")
val2 <- c(3,0,4)
connection2 <- 2
neighbor2 <- step.choice(pol2, val2, connection2)
expect1 <- as.data.frame(matrix(c(113,87,1,2,2,1),ncol=3,nrow=2))
colnames(expect1) <- c("result","from","to")
expect2 <- as.data.frame(matrix(c(174,198,1,3,2,1),ncol=3,nrow=2))
colnames(expect2) <- c("result","from","to")
stopifnot(
isTRUE(all.equal(neighbor1,expect1))
)
stopifnot(
isTRUE(all.equal(neighbor2,expect2))
)
set.seed(1)
max1 <- repeat.climb(5, 10, 5, 2, kind="steep")
library("dplyr")
set.seed(1)
max1 <- repeat.climb(5, 10, 5, 2, kind="steep")
max1
set.seed(1)
max1 <- repeat.climb(5, 10, 5, 2, kind="steep")
max1
class(max1)
set.seed(16)
max2 <- repeat.climb(10, 25, 8, 3, kind="median")
max2
set.seed(1)
max.steep <- repeat.climb(5, 10, 5, 2, kind="steep")
set.seed(16)
max.median <- repeat.climb(10, 25, 8, 3, kind="median")
set.seed(3)
max.least <- repeat.climb(7, 22, 13, 2, kind="median")
max.steep
max.median
max.least
library("Hillclimbing")
library("dplyr")
load("repeat.climb")
set.seed(1)
max.steep <- repeat.climb(5, 10, 5, 2, kind="steep")
set.seed(16)
max.median <- repeat.climb(10, 25, 8, 3, kind="median")
set.seed(3)
max.least <- repeat.climb(7, 22, 13, 2, kind="median")
expect1 <- "51.83-33.3"
expect2 <- "-163.1-207"
expect3 <- "-45.25-173"
stopifnot(
isTRUE(max.steep == expect1)
)
stopifnot(
isTRUE(max.median == expect2)
)
stopifnot(
isTRUE(max.least == expect3)
)
load("repeat.climb.R")
oad("repeat_steps.R")
load("repeat_steps.R")
library("Hillclimbing")
load("repeat_steps.R")
?load
library(Hillclimbing)
third.1 <- final3(times=100)
library(Hillclimbing)
third.1 <- final3(times=100)
library(dplyr)
library(Hillclimbing)
third.1 <- final3(times=100)
third.2 <- final3(times=100)
save(third.1, file="third.1.RData")
save(third.2, file="third.2.RData")
load("~/Hillclimbing/third.1.RData")
View(third.1)
load("~/Hillclimbing/third.2.RData")
View(third.2)
View(third.1)
View(third.2)
View(third.1)
library(Hillclimbing)
first.3 <- final(times=100)
library(Hillclimbing)
first.3 <- final(times=100)
final(times=1)
first.3 <- final(times=100)
first.3
save(first.3,file="first.3.RData")
pol <- pol(3,c(1,2,1,2,1,2,1,2,1,2))
val <- c(4,2,3)
connection <- 2
calc1 <- step.final.steep(pol, cal, connection)
calc2 <- step.final.med(pol, cal, connection)
calc3 <- step.final.least(pol, cal, connection)
calc1 <- step.final.steep(pol, val, connection)
calc2 <- step.final.med(pol, val, connection)
calc3 <- step.final.least(pol, val, connection)
calc1
calc2
calc3
pol <- pol(3,c(1,2,1,2,1,2,1,2,1,2))
val <- c(4,2,3)
connection <- 2
calc1 <- step.final.steep(pol, val, connection)
calc2 <- step.final.med(pol, val, connection)
calc3 <- step.final.least(pol, val, connection)
expect1 <- 120
expect2 <- 120
expect3 <- 97
stopifnot(
isTRUE(calc1 == 120)
)
stopifnot(
isTRUE(calc2 == 120)
)
stopifnot(
isTRUE(calc3 == 97)
)
set.seed(1)
chart <- final(n=15, expen=20, times=5)
set.seed(1)
chart <- final(n=6, expen=20, times=5)
chart
class(chart)
save(chart,file="test.final.RData")
data(chart)
data(test.final)
library(Hillclimbing)
data(test.final)
data("chart")
data("test.final")
load("final_chart.R")
set.seed(1)
result <- final(n=6, expen=20, times=5)
data("test.final")
expect <- chart
stopifnot(
isTRUE(all.equal(result.chart))
)
stopifnot(
isTRUE(all.equal(result,chart))
)
isTRUE(all.equal(result,chart)
)
kind <- "median"
times=100
expen=50
n=20
All <- NULL
Single1 <- vector("",length=5)
Single1 <- vector(" ",length=5)
Single1 <- vector("character",length=5)
Single2 <- vector("character",length=5)
for (connection in 1:5) {
## Calculate the average of local maximums and bind them into a chart
Single1[connection] <- repeat.climb(n, expen, times, connection, kind, cost)
}
cost=0
for (connection in 1:5) {
## Calculate the average of local maximums and bind them into a chart
Single1[connection] <- repeat.climb(n, expen, times, connection, kind, cost)
}
for (connection in 1:5) {
## Calculate the average of local maximums and bind them into a chart
Single2[connection] <- repeat.climb(n, expen, times, connection, kind, cost)
}
data(fiest.1)
data(first.1)
data("first.1")
load("~/Hillclimbing/data/first.1.RData")
load("~/Hillclimbing/data/first.2.RData")
View(first.1)
for(i in 1:5) {
first.1[2,i+1]}
a <- for(i in 1:5) {
first.1[2,i+1]}
a
first.1[2,3+1]
View(first.1)
first.1[2,2]
Single1
first.1[2,2] <- "781.6-562"
first.1 <- as.matrix(first.1)
View(first.1)
first.1[2,2] <- "781.6-562"
first.1[2,3] <- "920.6-533"
first.1[2,4] <- "1156-510"
first.1[2,5] <- "1143-462"
first.1[2,6] <- "1143-417"
first.1
save(first.1, file="first.1.RData")
load("~/Hillclimbing/first.1.RData")
View(first.1)
View(first.2)
single2
single.2
Single2
first.2 <- as.matrix(first.2)
class(first.1)
View(first.1)
first.1
first.2[2,2]
View(first.2)
first.2[2,1]
first.2[2,1] <- Single[1]
first.2[2,1] <- Single2[1]
first.2[2,2] <- Single2[2]
first.2[2,3] <- Single2[3]
first.2[2,4] <- Single2[4]
first.2[2,5] <- Single2[5]
save(first.2,file="first.2.RData")
for (connection in 1:5) {
Single1[connection] <- repeat.climb2(n, expen, times, connection, kind, cost)
}
for (connection in 1:5) {
Single2[connection] <- repeat.climb2(n, expen, times, connection, kind, cost)
}
for (connection in 1:5) {
Single3[connection] <- repeat.climb2(n, expen, times, connection, kind, cost)
}
Single3 <- NULL
for (connection in 1:5) {
Single3[connection] <- repeat.climb2(n, expen, times, connection, kind, cost)
}
load("~/Hillclimbing/data/second.1.RData")
load("~/Hillclimbing/data/second.2.RData")
load("~/Hillclimbing/data/second.3.RData")
View(second.1)
Single1
class(second.1)
second.1 <- as.matrix(second.1)
load("~/Hillclimbing/data/second.1.RData")
second.1 <- as.matrix(second.1)
View(second.1)
second.1[2,1]
for(i in 1:5) {
second.1[2.i] <- Single[i]}
for(i in 1:5) {
second.1[2.i] <- Single1[i]}
Single[2]
Single1[2]
for(i in 1:5) {
second.1[2,i] <- Single1[i]}
for(i in 1:5) {
second.2[2,i] <- Single2[i]}
second.2 <- as.matrix(second.2)
for(i in 1:5) {
second.2[2,i] <- Single2[i]}
View(second.2)
second.3 <- as.matrix(second.3)
for(i in 1:5) {
second.3[2,i] <- Single3[i]}
View(second.3)
save(second.1, file="second.1.RData")
save(second.2, file="second.2.RData")
save(second.3, file="second.3.RData")
third.3 <- final.3(times=100)
third.3 <- final3(times=100)
load("~/Hillclimbing/data/first.1.RData")
load("~/Hillclimbing/data/first.2.RData")
load("~/Hillclimbing/data/first.3.RData")
load("~/Hillclimbing/data/second.1.RData")
load("~/Hillclimbing/data/second.2.RData")
load("~/Hillclimbing/data/second.3.RData")
third.3 <- final3(times=100)
View(first.1)
View(first.2)
View(first.3)
View(second.1)
View(second.2)
View(second.3)
third.3 <- final3(times=100)
load("~/Hillclimbing/data/third.1.RData")
third.3
View(third.1)
third.1
save(third.3, file="third.3.RData")
data("third.2")
data(third.2)
third.2[2,]
third.2[2,]<-third.3[2,]
third.2 <- as.matrix(third.2)
third.2[2,]<-third.3[2,]
third.2
data(third.2)
hird.2
third.2
library(Hillclimbing)
data(third.1)
data(third.2)
third.1
third.2
k <- "median"
n <- 20
expen <- 50
times <- 100
cost <- 0
Single1 <- NULL
Single2 <- NULL
for (connection in 1:5) {
Single1[connection] <- repeat.climb3(n, expen, times, connection, kind, cost)
}
for (connection in 1:5) {
Single2[connection] <- repeat.climb3(n, expen, times, connection, kind, cost)
}
third.1 <- as.matrix(third.1)
for (i in 1:5) {
third.1[2,i] <- Single1[i]
}
save(third.1, file="third.1.RData")
third.2 <- as.matrix(third.2)
for (i in 1:5) {
third.2[2,i] <- Single2[i]
}
save(third.2, file="third.2.RData")
kind <- "median"
n <- 20
expen <- 50
times <- 100
cost <- 0
Single1 <- NULL
Single2 <- NULL
for (connection in 1:5) {
Single1[connection] <- repeat.climb3(n, expen, times, connection, kind, cost)
}
for (connection in 1:5) {
Single2[connection] <- repeat.climb3(n, expen, times, connection, kind, cost)
}
third.1 <- as.matrix(third.1)
for (i in 1:5) {
third.1[2,i] <- Single1[i]
}
save(third.1, file="third.1.RData")
third.2 <- as.matrix(third.2)
for (i in 1:5) {
third.2[2,i] <- Single2[i]
}
save(third.2, file="third.2.RData")
load("~/Hillclimbing/third.1.RData")
load("~/Hillclimbing/third.2.RData")
View(third.1)
View(third.2)
load("~/Hillclimbing/data/first.1.RData")
load("~/Hillclimbing/data/first.2.RData")
load("~/Hillclimbing/data/first.3.RData")
load("~/Hillclimbing/data/second.1.RData")
load("~/Hillclimbing/data/second.2.RData")
load("~/Hillclimbing/data/second.3.RData")
load("~/Hillclimbing/data/third.3.RData")
View(first.3)
class(first.3)
first.3 <- as.matrix(first.3)
first <- NULL
second <- NULL
third <- NULL
library(xtable)
?xtable
xtable(first.1)
xtable(first.1, caption="Table 1: the mean local maximums for the profit function over 300 different trials. Ciefficients are randomly chosen between [-1,1].")
View(first.1)
View(first.2)
View(first.3)
View(first.1)
View(first.2)
View(second.1)
View(second.2)
View(second.3)
View(third.1)
View(third.2)
View(third.3)
